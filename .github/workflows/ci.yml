name: CI/CD Pipeline

"on":
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Set up Node
        uses: actions/setup-node@v6
        with:
          node-version: 24

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js application
        run: npm run build

  release:
    name: Release and Deploy
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Set up Node
        uses: actions/setup-node@v6
        with:
          node-version: 24

      - name: Install dependencies
        run: npm ci

      # Semantic Release
      - name: Semantic Release
        id: semantic_release
        run: |
          npx semantic-release --debug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Check if a new version was created
      - name: Check semantic-release version
        id: check_version
        run: |
          echo "SEMANTIC_RELEASE_VERSION: $SEMANTIC_RELEASE_VERSION"
          if [ -z "$SEMANTIC_RELEASE_VERSION" ]; then
            echo "No new release created."
            echo "version=" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "New release version: $SEMANTIC_RELEASE_VERSION"
            echo "version=$SEMANTIC_RELEASE_VERSION" >> $GITHUB_OUTPUT
          fi

      # Docker operations (only if new release)
      - name: Log in to Docker registry
        if: ${{ steps.check_version.outputs.version != '' }}
        uses: docker/login-action@v3.6.0
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install pack CLI
        if: ${{ steps.check_version.outputs.version != '' }}
        run: |
          curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.37.0/pack-v0.37.0-linux.tgz" \
          | sudo tar -xvz -C /usr/local/bin

      - name: Build Docker image
        if: ${{ steps.check_version.outputs.version != '' }}
        run: |
          docker build \
            -t docker.io/darthkali/gute-schule-jetzt:${{ steps.check_version.outputs.version }} \
            -t docker.io/darthkali/gute-schule-jetzt:latest \
            .

      - name: Push Docker image
        if: ${{ steps.check_version.outputs.version != '' }}
        run: |
          docker push docker.io/darthkali/gute-schule-jetzt:${{ steps.check_version.outputs.version }}
          docker push docker.io/darthkali/gute-schule-jetzt:latest
